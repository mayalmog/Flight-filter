{"version":3,"sources":["services/http.service.js","services/flight.service.js","routes.js","pages/home-page.jsx","root-cmp.jsx","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","sessionStorage","clear","window","location","assign","flightService","query","routes","path","component","state","clockInterval","time","showFlights","flights","startClock","setInterval","usaTime","Date","toLocaleTimeString","timeZone","hour","minute","setState","prevState","toggleShowFlights","this","clearInterval","todayFormatted","now","toISOString","substring","startTime","endTime","className","onClick","length","map","flight","iata","departure","React","Component","label","RootCmp","route","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEMA,EACA,QAIFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,I,SAatBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OANhD,cAEcM,EAFd,yBAQeA,EAAIN,MARnB,sCAUQO,QAAQC,IAAR,qBAA0BL,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFO,QAAQE,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,SAC7BC,eAAeC,QACfC,OAAOC,SAASC,OAAO,MAdnC,+D,sBCtBO,IAAMC,EAAgB,CACzBC,M,wFAIJ,sBAAAhB,EAAA,+EAEqBJ,EAAgB,UAFrC,4I,iCCGeqB,EARA,CACX,CACIC,KAAM,IACNC,UCHR,4MACIC,MAAQ,CACJC,cAAe,KACfC,KAAM,GACNC,aAAa,EACbC,QAAS,IALjB,EAuBIC,WAAa,WACT,IAAMJ,EAAgBK,aAAY,WAC9B,IACMC,GAAU,IAAIC,MAAOC,mBAAmB,QAAS,CAAEC,SADxC,mBAC4DC,KAAM,UAAWC,OAAQ,YACtG,EAAKC,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBZ,KAAMK,SACnD,KACH,EAAKM,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBb,sBA7BpD,EAgCIc,kBAAoB,WAChB,EAAKF,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBX,aAAc,EAAKH,MAAMG,kBAjC7E,8FAQI,4BAAAvB,EAAA,6DACIoC,KAAKX,aADT,kBAG8BV,EAAcC,QAH5C,OAGcQ,EAHd,OAIQY,KAAKH,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBV,eAJpD,gDAOQnB,QAAQC,IAAI,wBAAZ,MAPR,yDARJ,wFAmBI,WACI+B,cAAcD,KAAKhB,MAAMC,iBApBjC,oBAoCI,WACI,MAAuCe,KAAKhB,MAApCE,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,YAEjBe,EADQ,IAAIV,KAAKA,KAAKW,OACCC,cAAcC,UAAU,EAAG,IAClDC,EAAY,IAAId,KAAKA,KAAKW,OAAOV,mBAAmB,QAAS,CAAEC,SAAU,mBAAoBC,KAAM,UAAWC,OAAQ,YACtHW,EAAU,IAAIf,KAAKA,KAAKW,MAAQ,MAASV,mBAAmB,QAAS,CAAEC,SAAU,mBAAoBC,KAAM,UAAWC,OAAQ,YACpI,OACI,0BAASY,UAAU,uBAAnB,UACI,uDAA0BtB,KAC1B,sBAAKsB,UAAU,2DAAf,UACI,2CACA,wBACIA,UAAU,MACVC,QAAST,KAAKD,kBAFlB,SAGEX,EAAQsB,SACV,+CAAkBJ,EAAlB,SAAmCC,EAAnC,OAAgDL,SAElDf,GAAe,gFAEhBA,GAAe,qBAAKqB,UAAU,6BAAf,SACXpB,EAAQuB,KAAI,SAAAC,GAAM,OACf,+BAAuBA,EAAOC,KAAOD,EAAOC,KAAO,iBAAnD,mBAAqFD,EAAOE,YAAnFF,EAAOC,kBAzDxC,GAA8BE,IAAMC,WDI5BC,MAAO,sBEDFC,EAAb,4JAEI,WACI,OACI,8BACI,+BACI,cAAC,IAAD,UACKrC,EAAO8B,KAAI,SAAAQ,GAAK,OAAI,cAAC,IAAD,CAAwBC,OAAK,EAACrC,UAAWoC,EAAMpC,UAAWD,KAAMqC,EAAMrC,MAA1DqC,EAAMrC,mBAP/D,GAA6BiC,IAAMC,W,MCEnCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.7597a382.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","\r\nimport { httpService } from './http.service'\r\n\r\n\r\nexport const flightService = {\r\n    query,\r\n\r\n}\r\n\r\nasync function query() {\r\n    try {\r\n        return await httpService.get('flight')\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n","import { HomePage } from './pages/home-page.jsx'\r\n\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n        label: 'Home 🏠',\r\n    }\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\n\r\nimport { flightService } from '../services/flight.service'\r\n\r\nexport class HomePage extends React.Component {\r\n    state = {\r\n        clockInterval: null,\r\n        time: '',\r\n        showFlights: false,\r\n        flights: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.startClock()\r\n        try {\r\n            const flights = await flightService.query()\r\n            this.setState(prevState => ({ ...prevState, flights }))\r\n\r\n        } catch (err) {\r\n            console.log('Could not get flights', err);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.clockInterval)\r\n    }\r\n\r\n    startClock = () => {\r\n        const clockInterval = setInterval(() => {\r\n            const timezone = \"America/New_York\"\r\n            const usaTime = new Date().toLocaleTimeString(\"en-US\", { timeZone: timezone, hour: '2-digit', minute: '2-digit' })\r\n            this.setState(prevState => ({ ...prevState, time: usaTime }))\r\n        }, 1000)\r\n        this.setState(prevState => ({ ...prevState, clockInterval }))\r\n    }\r\n\r\n    toggleShowFlights = () => {\r\n        this.setState(prevState => ({ ...prevState, showFlights: !this.state.showFlights }))\r\n    }\r\n\r\n    render() {\r\n        const { time, flights, showFlights } = this.state\r\n        const today = new Date(Date.now());\r\n        const todayFormatted = today.toISOString().substring(0, 10)\r\n        const startTime = new Date(Date.now()).toLocaleTimeString(\"en-US\", { timeZone: 'America/New_York', hour: '2-digit', minute: '2-digit' })\r\n        const endTime = new Date(Date.now() + 3600000).toLocaleTimeString(\"en-US\", { timeZone: 'America/New_York', hour: '2-digit', minute: '2-digit' })\r\n        return (\r\n            <section className=\"homepage flex column\">\r\n                <h1>Current Time in JFK: {time}</h1>\r\n                <div className=\"homepage-flights flex column align-center justify-center\">\r\n                    <h1>There Are</h1>\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={this.toggleShowFlights}\r\n                    >{flights.length}</button>\r\n                    <h1>Flights From {startTime} Till {endTime} On {todayFormatted}</h1>\r\n                </div>\r\n                {!showFlights && <h3>Click on the flights count to show flight list</h3>\r\n                }\r\n                {showFlights && <div className=\"flight-preview flex column\">\r\n                    {flights.map(flight =>\r\n                        <h2 key={flight.iata}>{flight.iata ? flight.iata : 'No IATA number'} - Departure at {flight.departure}</h2>\r\n                    )}\r\n                </div>}\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\n// const { Switch, Route } = ReactRouterDOM\r\nimport { Switch, Route } from 'react-router'\r\n\r\nimport routes from './routes'\r\n\r\nexport class RootCmp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <main>\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { RootCmp } from './root-cmp';\nimport './assets/styles/main.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <RootCmp />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}